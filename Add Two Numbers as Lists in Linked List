Q:You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8

    342 + 465 = 807
Make sure there are no trailing zeros in the output list
So, 7 -> 0 -> 8 -> 0 is not a valid response even though the value is still 807

Soln:

ListNode* Solution::addTwoNumbers(ListNode* A, ListNode* B) {
    ListNode*head=new ListNode(0);
    int curr=0;
    ListNode*temp=head;
    while(A!=NULL || B!=NULL){
        int x=(A!=NULL)?A->val:0;
        int y=(B!=NULL)?B->val:0;
        int z=curr+x+y;
        
        temp->next=new ListNode(z%10);
        curr=z/10;
        if(A!=NULL){
            A=A->next;
        }
        if(B!=NULL){
            B=B->next;
        }
        temp=temp->next;
}
if(curr>0){
    temp->next=new ListNode(curr);
}
return head->next;
}
