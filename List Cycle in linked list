Q:Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

Try solving it using constant additional space.

Example :

Input : 

                  ______
                 |     |
                 \/    |
        1 -> 2 -> 3 -> 4

Return the node corresponding to node 3

soln:
ListNode* Solution::detectCycle(ListNode* A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    ListNode*sp=A;
    ListNode*fp=A;
    while(fp!=NULL && fp->next!=NULL){
        sp=sp->next;
        fp=fp->next->next;
        if(sp==fp){
            sp=A;
            while(sp!=fp)
            {
                sp=sp->next;
                fp=fp->next;
            }
            return sp;
        }
    }
    return NULL;
}

