Q:Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.

soln:
ListNode* Solution::partition(ListNode* A, int B) {
    ListNode* temp1=new ListNode(0);
    ListNode* temp2=new ListNode(0);
    ListNode *prev1=temp1;
    ListNode *prev2=temp2;
    while(A){
        if(A->val<B){
            prev1->next=A;
            prev1=prev1->next;
        }
        else{
            prev2->next=A;
            prev2=prev2->next;
        }
        A=A->next;
    }
    prev1->next=temp2->next;
    prev2->next=NULL;
    return temp1->next;
}
